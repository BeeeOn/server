<!DOCTYPE query-set SYSTEM "query-set.dtd">
<query-set for-database="home8">

	<test-global>
		<setup name="global places for tests">
			<sql>INSERT INTO places (id, name)
				VALUES ('16de2f05-8af7-4729-8479-1973590cfa54', 'Test Place 1')</sql>
			<sql>INSERT INTO places (id, name)
				VALUES ('bd8ea40c-91c9-4d8c-8c13-a8332c39a437', 'Test Place 2')</sql>
			<sql>INSERT INTO places (id, name)
				VALUES ('c1a23a50-4734-43ed-bc96-2a39704c1f41', 'Test Place 3')</sql>
		</setup>
		<setup name="global gateways for tests">
			<!-- Test Gateway 1 in place Test Place 1 -->
			<sql>INSERT INTO gateways (id, name, place_id, altitude, latitude, longitude)
				VALUES (181462068183316, 'Test Gateway 1',
						'16de2f05-8af7-4729-8479-1973590cfa54', -1.5, 1.5, 11.5)</sql>
			<sql>INSERT INTO gateways_status (gateway_id, at, version, ip)
				VALUES (181462068183316, 1483414300, '0.9-master', '192.168.12.1')</sql>
			<sql>INSERT INTO gateways_status (gateway_id, at, version, ip)
				VALUES (181462068183316, 1483448120, '1.0-testing', '192.168.12.1')</sql>
			<sql>INSERT INTO gateways_status (gateway_id, at, version, ip)
				VALUES (181462068183316, 1483553208, '1.0-testing', '192.168.12.2')</sql>
			<!-- Test Gateway 2 in place Test Place 2 -->
			<sql>INSERT INTO gateways (id, name, place_id, altitude, latitude, longitude)
				VALUES (140548523101825, 'Test Gateway 2',
						'bd8ea40c-91c9-4d8c-8c13-a8332c39a437', -2.5, 2.5, 22.5)</sql>
			<sql>INSERT INTO gateways_status (gateway_id, at, version, ip)
				VALUES (140548523101825, 1483454300, '1.0-master', '192.168.11.1')</sql>
			<!-- unused gateway Test Gateway 3 with no status -->
			<sql>INSERT INTO gateways (id, name, place_id, altitude, latitude, longitude)
				VALUES (144426044538750, 'Test Gateway 3',
						'c1a23a50-4734-43ed-bc96-2a39704c1f41', -3.5, 3.5, 33.5)</sql>
		</setup>
		<setup name="global locations for tests">
			<!-- kitchen of Test Gateway 1 -->
			<sql>INSERT INTO locations (id, name, gateway_id)
				VALUES ('f5ad3e17-aa65-4291-8916-1d21cdf6b4bb',
					'Kitchen',
					181462068183316)</sql>
			<!-- livingroom of Test Gateway 1 -->
			<sql>INSERT INTO locations (id, name, gateway_id)
				VALUES ('3a91f58e-579e-41f2-a17b-3fb6166abb69',
					'Livingroom',
					181462068183316)</sql>
			<!-- bedroom of Test Gateway 2 -->
			<sql>INSERT INTO locations (id, name, gateway_id)
				VALUES ('7a336a66-da55-4bf0-ba37-00461845823b',
					'Bedroom',
					140548523101825)</sql>
		</setup>
		<setup name="global devices for test">
			<!-- Test Device A on Test Gateway 1 (inactive) -->
			<sql>INSERT INTO devices (
					id, gateway_id, location_id, name, type, refresh, battery,
					signal, first_seen, last_seen, active_since)
				VALUES (
					2731287621, 181462068183316, NULL, 'Test Device A', 0, 5, 95,
					80, 1483416275, 1483448120, NULL)</sql>
			<!-- Test Device B on Test Gateway 1 (active) -->
			<sql>INSERT INTO devices (
					id, gateway_id, location_id, name, type, refresh, battery,
					signal, first_seen, last_seen, active_since)
				VALUES (
					2728733371, 181462068183316, NULL, 'Test Device B', 0, 15, NULL,
					NULL, 1483424265, 1483453120, 1483434265)</sql>
			<!-- Test Device C on Test Gateway 1 (active) -->
			<sql>INSERT INTO devices (
					id, gateway_id, location_id, name, type, refresh, battery,
					signal, first_seen, last_seen, active_since)
				VALUES (
					2751463465, 181462068183316, NULL, 'Test Device C', 0, 15, NULL,
					99, 1483422145, 1483541120, 1483444265)</sql>
		</setup>
		<setup name="global identities and users for tests">
			<!-- Jack Sparrow -->
			<sql>INSERT INTO identities (id, email) VALUES
				('b5696add-11c4-4b51-834a-c14ddd672db4', 'jack.sparrow@example.org')</sql>
			<sql>INSERT INTO users (id, first_name, last_name) VALUES
				('d67713ff-de75-43c4-917b-88f0048b7ccf', 'Jack', 'Sparrow')</sql>
			<!-- Franta Kutil -->
			<sql>INSERT INTO identities (id, email) VALUES
				('d184702c-7003-49a7-9ded-4c4fe5d88881', 'franta@example.org')</sql>
			<sql>INSERT INTO identities (id, email) VALUES
				('aeec55a1-b8f5-4ae8-b8a9-1a35781b01d1', 'franta2@example.org')</sql>
			<sql>INSERT INTO users (id, first_name, last_name) VALUES
				('014ca448-26d7-4051-ad11-8c9e37343f0d', 'Franta', 'Kutil')</sql>
			<!-- Pepa Goodman -->
			<sql>INSERT INTO identities (id, email) VALUES
				('4264d04a-4a50-4a53-a765-dc5a7cdce6f1', 'pepa@example.org')</sql>
			<sql>INSERT INTO identities (id, email) VALUES
				('cd8c611b-7e8a-43ff-8d35-9e92c74f003d', 'pepa2@example.org')</sql>
			<sql>INSERT INTO identities (id, email) VALUES
				('2c663e6b-d995-44f1-bc41-f8b12b2acbc2', 'pepa_nonverified@example.org')</sql>
			<sql>INSERT INTO users (id, first_name, last_name) VALUES
				('29d214d4-2057-4e06-b003-b839d0bb1df6', 'Pepa', 'Goodman')</sql>
		</setup>
		<setup name="global verified identities for tests">
			<!-- Jack Sparrow -->
			<sql>INSERT INTO verified_identities (id, identity_id, user_id, provider) VALUES (
					'b6e70e5a-dccd-4898-8c17-114160a808c6',
					'b5696add-11c4-4b51-834a-c14ddd672db4',
					'd67713ff-de75-43c4-917b-88f0048b7ccf',
					'test')</sql>
			<!-- Franta Kutil -->
			<sql>INSERT INTO verified_identities (id, identity_id, user_id, provider) VALUES (
					'a08909d5-0d59-4605-b1cb-99d9d813f657',
					'd184702c-7003-49a7-9ded-4c4fe5d88881',
					'014ca448-26d7-4051-ad11-8c9e37343f0d',
					'test')</sql>
			<sql>INSERT INTO verified_identities (id, identity_id, user_id, provider) VALUES (
					'453ddb82-76ee-437a-b058-64998193a05c',
					'aeec55a1-b8f5-4ae8-b8a9-1a35781b01d1',
					'014ca448-26d7-4051-ad11-8c9e37343f0d',
					'test')</sql>
			<!-- Pepa Goodman -->
			<sql>INSERT INTO verified_identities (id, identity_id, user_id, provider) VALUES (
					'6dc7eeb2-4e7d-48dd-9c6a-5f8738410fa2',
					'4264d04a-4a50-4a53-a765-dc5a7cdce6f1',
					'29d214d4-2057-4e06-b003-b839d0bb1df6',
					'test')</sql>
			<sql>INSERT INTO verified_identities (id, identity_id, user_id, provider) VALUES (
					'1d26df6a-c05c-4003-8759-fa8c05e86081',
					'cd8c611b-7e8a-43ff-8d35-9e92c74f003d',
					'29d214d4-2057-4e06-b003-b839d0bb1df6',
					'test')</sql>
		</setup>
		<setup name="global gateway roles for tests">
			<!-- pepa@example.org is admin (and owner) of Test Gateway 1 -->
			<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
					'faabc96a-12b4-421a-8f4b-00ae1f75c11f',
					181462068183316,
					'4264d04a-4a50-4a53-a765-dc5a7cdce6f1',
					10, 1483456377)</sql>
			<!-- pepa2@example.org is user of Test Gateway 1 -->
			<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
					'f3733b47-d47c-4fa1-b2ce-2101dfa33ca1',
					181462068183316,
					'cd8c611b-7e8a-43ff-8d35-9e92c74f003d',
					20, 1483456378)</sql>
			<!-- jack.sparrow@example.org is guest of Test Gateway 1 -->
			<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
					'aee235a1-ac89-4553-b185-d689faeeeee3',
					181462068183316,
					'b5696add-11c4-4b51-834a-c14ddd672db4',
					30, 1483456379)</sql>
			<!-- franta@example.org is admin (and owner) of Test Gateway 2 -->
			<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
					'e01b65c0-5815-4f5b-a172-1dce164ef3d9',
					140548523101825,
					'd184702c-7003-49a7-9ded-4c4fe5d88881',
					10, 1483456375)</sql>
			<!-- pepa2@example.org is admin of Test Gateway 2 -->
			<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
					'4564a87e-d3e0-48a7-a29a-1ee0f9b111a1',
					140548523101825,
					'cd8c611b-7e8a-43ff-8d35-9e92c74f003d',
					10, 1483456379)</sql>
		</setup>
		<teardown name="delete global gateway roles">
			<sql>DELETE FROM roles_in_gateway WHERE id = '4564a87e-d3e0-48a7-a29a-1ee0f9b111a1'</sql>
			<sql>DELETE FROM roles_in_gateway WHERE id = 'e01b65c0-5815-4f5b-a172-1dce164ef3d9'</sql>
			<sql>DELETE FROM roles_in_gateway WHERE id = 'aee235a1-ac89-4553-b185-d689faeeeee3'</sql>
			<sql>DELETE FROM roles_in_gateway WHERE id = 'f3733b47-d47c-4fa1-b2ce-2101dfa33ca1'</sql>
			<sql>DELETE FROM roles_in_gateway WHERE id = 'faabc96a-12b4-421a-8f4b-00ae1f75c11f'</sql>
		</teardown>
		<teardown name="delete global verified identities">
			<sql>DELETE FROM verified_identities WHERE id = '1d26df6a-c05c-4003-8759-fa8c05e86081'</sql>
			<sql>DELETE FROM verified_identities WHERE id = '6dc7eeb2-4e7d-48dd-9c6a-5f8738410fa2'</sql>
			<sql>DELETE FROM verified_identities WHERE id = '453ddb82-76ee-437a-b058-64998193a05c'</sql>
			<sql>DELETE FROM verified_identities WHERE id = 'a08909d5-0d59-4605-b1cb-99d9d813f657'</sql>
			<sql>DELETE FROM verified_identities WHERE id = 'b6e70e5a-dccd-4898-8c17-114160a808c6'</sql>
		</teardown>
		<teardown name="delete global identities and users">
			<sql>DELETE FROM users WHERE id = '29d214d4-2057-4e06-b003-b839d0bb1df6'</sql>
			<sql>DELETE FROM identities WHERE id = '2c663e6b-d995-44f1-bc41-f8b12b2acbc2'</sql>
			<sql>DELETE FROM identities WHERE id = 'cd8c611b-7e8a-43ff-8d35-9e92c74f003d'</sql>
			<sql>DELETE FROM identities WHERE id = '4264d04a-4a50-4a53-a765-dc5a7cdce6f1'</sql>
			<sql>DELETE FROM users WHERE id = '014ca448-26d7-4051-ad11-8c9e37343f0d'</sql>
			<sql>DELETE FROM identities WHERE id = 'aeec55a1-b8f5-4ae8-b8a9-1a35781b01d1'</sql>
			<sql>DELETE FROM identities WHERE id = 'd184702c-7003-49a7-9ded-4c4fe5d88881'</sql>
			<sql>DELETE FROM users WHERE id = 'd67713ff-de75-43c4-917b-88f0048b7ccf'</sql>
			<sql>DELETE FROM identities WHERE id = 'b5696add-11c4-4b51-834a-c14ddd672db4'</sql>
		</teardown>
		<teardown name="global devices for test">
			<sql>DELETE FROM devices WHERE id = 2751463465 and gateway_id = 181462068183316</sql>
			<sql>DELETE FROM devices WHERE id = 2728733371 and gateway_id = 181462068183316</sql>
			<sql>DELETE FROM devices WHERE id = 2731287621 and gateway_id = 181462068183316</sql>
		</teardown>
		<teardown name="delete global locations">
			<sql>DELETE FROM locations WHERE id = '7a336a66-da55-4bf0-ba37-00461845823b'</sql>
			<sql>DELETE FROM locations WHERE id = '3a91f58e-579e-41f2-a17b-3fb6166abb69'</sql>
			<sql>DELETE FROM locations WHERE id = 'f5ad3e17-aa65-4291-8916-1d21cdf6b4bb'</sql>
		</teardown>
		<teardown name="delete global gateways">
			<sql>DELETE FROM gateways WHERE id = 140548523101825</sql>
			<sql>DELETE FROM gateways WHERE id = 181462068183316</sql>
		</teardown>
		<teardown name="delete global places">
			<sql>DELETE FROM places WHERE id = 'bd8ea40c-91c9-4d8c-8c13-a8332c39a437'</sql>
			<sql>DELETE FROM places WHERE id = '16de2f05-8af7-4729-8479-1973590cfa54'</sql>
		</teardown>
	</test-global>

	<query id="places.create">
		<define>INSERT INTO places (id, name) VALUES (
				<value name="id" type="uuid" />,
				<value name="name" type="varchar" />)</define>
		<test name="test insert works">
			<check name="insert 'Test Place 10'">
				<call-query>
					<arg name="id">'6a3ebd1f-9dc2-48e0-85b4-f0880eb3e334'</arg>
					<arg name="name">'Test Place 10'</arg>
				</call-query>
				<sql>SELECT id, name FROM places WHERE id = '6a3ebd1f-9dc2-48e0-85b4-f0880eb3e334'</sql>
				<expect>
					<row>
						<value type="uuid" name="id">6a3ebd1f-9dc2-48e0-85b4-f0880eb3e334</value>
						<value name="name">Test Place 10</value>
					</row>
				</expect>
			</check>
			<teardown name="delete 'Test Place 10'">
				<sql>DELETE FROM places WHERE id = '6a3ebd1f-9dc2-48e0-85b4-f0880eb3e334'</sql>
			</teardown>
		</test>
		<test name="test conflicting place">
			<check name="insert 'Test Place 11' with conflicting ID">
				<call-query>
					<arg name="id">'16de2f05-8af7-4729-8479-1973590cfa54'</arg>
					<arg name="name">'Test Place 11'</arg>
				</call-query>
				<expect>
					<fail-insert table="places" conflict="id" />
				</expect>
			</check>
		</test>
	</query>

	<query id="places.update">
		<define>UPDATE places SET name = <value name="name" type="varchar" />
				WHERE id = <value name="id" type="uuid" /></define>
		<test name="update of place works">
			<setup name="prepare a testing place to avoid conflicts with the global ones">
				<sql>INSERT INTO places (id, name)
					VALUES ('e834712f-1a31-48c0-a01b-cecde260ecea', 'Test Place 12')</sql>
			</setup>
			<check name="update testing place, rename to 'Test Place 13'">
				<call-query>
					<arg name="id">'e834712f-1a31-48c0-a01b-cecde260ecea'</arg>
					<arg name="name">'Test Place 13'</arg>
				</call-query>
				<sql>SELECT id, name FROM places WHERE id = 'e834712f-1a31-48c0-a01b-cecde260ecea'</sql>
				<expect>
					<row>
						<value type="uuid" name="id">e834712f-1a31-48c0-a01b-cecde260ecea</value>
						<value name="name">Test Place 13</value>
					</row>
				</expect>
			</check>
			<teardown name="delete testing place">
				<sql>DELETE FROM places WHERE id = 'e834712f-1a31-48c0-a01b-cecde260ecea'</sql>
			</teardown>
		</test>
	</query>

	<query id="places.remove">
		<define>DELETE FROM places WHERE id = <value name="id" type="uuid" /></define>
		<test name="delete of place works">
			<setup name="prepare a testing place to avoid conflicts with the global ones">
				<sql>INSERT INTO places (id, name)
					VALUES ('e834712f-1a31-48c0-a01b-cecde260ecea', 'Test Place 12')</sql>
			</setup>
			<check name="delete testing place">
				<call-query>
					<arg name="id">'e834712f-1a31-48c0-a01b-cecde260ecea'</arg>
				</call-query>
				<sql>SELECT id, name FROM places WHERE id = 'e834712f-1a31-48c0-a01b-cecde260ecea'</sql>
				<expect />
			</check>
		</test>
		<test name="delete non-existing place">
			<check name="delete and expect failure">
				<call-query>
					<arg name="id">'e834712f-1a31-48c0-a01b-cecde260ecea'</arg>
				</call-query>
				<sql>SELECT COUNT(*) AS count FROM places</sql>
				<expect>
					<row>
						<value name="count">3</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="places.fetch.by.id">
		<define>SELECT name FROM places WHERE id = <value name="id" type="uuid" /></define>
		<test name="simple test">
			<check name="select 'Test Place 1'">
				<call-query>
					<arg name="id">'16de2f05-8af7-4729-8479-1973590cfa54'</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Test Place 1</value>
					</row>
				</expect>
			</check>
			<check name="select 'Test Place 2'">
				<call-query>
					<arg name="id">'bd8ea40c-91c9-4d8c-8c13-a8332c39a437'</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Test Place 2</value>
					</row>
				</expect>
			</check>
			<check name="select non-existing">
				<call-query>
					<arg name="id">'db1c2915-9ddd-40d6-b1d5-ad92b1a3c30a'</arg>
				</call-query>
				<expect />
			</check>
		</test>
	</query>

	<query id="gateways.create">
		<define>INSERT INTO gateways (
				id, name, place_id, altitude, latitude, longitude
			) VALUES (
				<value name="id" type="uuid" />,
				<value name="name" type="varchar" />,
				<value name="place_id" type="uuid" />,
				<value name="altitude" type="double" />,
				<value name="latitude" type="double" />,
				<value name="longitude" type="double" />
			)</define>
		<test name="simple test">
			<check name="insert 'Test Gateway 10' works">
				<call-query>
					<arg name="id">161762224815122</arg>
					<arg name="name">'Test Gateway 10'</arg>
					<arg name="place_id">'bd8ea40c-91c9-4d8c-8c13-a8332c39a437'</arg>
					<arg name="altitude">54.5</arg>
					<arg name="latitude">45.5</arg>
					<arg name="longitude">15.5</arg>
				</call-query>
				<sql>SELECT id, name, place_id, altitude, latitude, longitude
					FROM gateways WHERE id = 161762224815122</sql>
				<expect>
					<row>
						<value type="uuid" name="id">161762224815122</value>
						<value name="name">Test Gateway 10</value>
						<value type="uuid" name="place_id">bd8ea40c-91c9-4d8c-8c13-a8332c39a437</value>
						<value name="altitude">54.5</value>
						<value name="latitude">45.5</value>
						<value name="longitude">15.5</value>
					</row>
				</expect>
			</check>
			<teardown name="delete 'Test Gateway 10'">
				<sql>DELETE FROM gateways WHERE id = 161762224815122</sql>
			</teardown>
		</test>
		<test name="fail on duplicate id">
			<check name="insert must fail">
				<call-query>
					<arg name="id">181462068183316</arg>
					<arg name="name">'Test Gateway 10'</arg>
					<arg name="place_id">'bd8ea40c-91c9-4d8c-8c13-a8332c39a437'</arg>
					<arg name="altitude">0.63</arg>
					<arg name="latitude">0.71</arg>
					<arg name="longitude">0.23</arg>
				</call-query>
				<expect>
					<fail-insert table="gateways" conflict="id" />
				</expect>
			</check>
		</test>
		<test name="fail on non-existing place">
			<check name="insert must fail">
				<call-query>
					<arg name="id">181462068183316</arg>
					<arg name="name">'Test Gateway 11'</arg>
					<arg name="place_id">'6f190529-f4be-4e4d-995d-cb1f6d826d0a'</arg>
					<arg name="altitude">0.33</arg>
					<arg name="latitude">0.41</arg>
					<arg name="longitude">0.53</arg>
				</call-query>
				<expect>
					<fail-insert table="gateways" conflict="place_id" />
				</expect>
			</check>
		</test>
	</query>

	<query id="gateways.fetch.by.id">
		<define>
		SELECT
			g.name AS name,
			g.altitude AS altitude,
			g.latitude AS latitude,
			g.longitude AS longitude,
			s.at AS last_changed,
			s.version AS version,
			s.ip AS ip,
			p.id AS place_id,
			p.name AS place_name
		FROM gateways AS g
		LEFT JOIN places AS p ON g.place_id = p.id
		LEFT JOIN gateways_status AS s ON s.gateway_id = g.id
		WHERE
			g.id = <value name="id" type="uuid" />
			AND
			(s.at IS NULL OR s.at =
				(SELECT MAX(at) FROM gateways_status WHERE gateway_id = g.id))
		</define>
		<test name="simple tests">
			<check name="find 'Test Gateway 1'">
				<call-query>
					<arg name="id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Test Gateway 1</value>
						<value name="altitude">-1.5</value>
						<value name="latitude">1.5</value>
						<value name="longitude">11.5</value>
						<value name="last_changed">1483553208</value>
						<value name="version">1.0-testing</value>
						<value name="ip">192.168.12.2</value>
						<value type="uuid" name="place_id">16de2f05-8af7-4729-8479-1973590cfa54</value>
						<value name="place_name">Test Place 1</value>
					</row>
				</expect>
			</check>
			<check name="find non-existing">
				<call-query>
					<arg name="id">118453478507226</arg>
				</call-query>
				<expect />
			</check>
		</test>
		<test name="fetch gateway with no status">
			<check name="find 'Test Gateway 3'">
				<call-query>
					<arg name="id">144426044538750</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Test Gateway 3</value>
						<value name="altitude">-3.5</value>
						<value name="latitude">3.5</value>
						<value name="longitude">33.5</value>
						<null name="last_changed" />
						<null name="version" />
						<null name="ip" />
						<value type="uuid" name="place_id">c1a23a50-4734-43ed-bc96-2a39704c1f41</value>
						<value name="place_name">Test Place 3</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="gateways.update">
		<define>
		UPDATE gateways SET
			name = <value name="name" type="varchar" />,
			altitude = <value name="altitude" type="double" />,
			latitude = <value name="latitude" type="double" />,
			longitude = <value name="longitude" type="double" />
		WHERE
			id = <value name="id" type="uuid" />
		</define>
	</query>

	<query id="gateways.fetch.accessible">
		<define>
		SELECT
			DISTINCT g.id AS id,
			g.name AS name,
			g.altitude AS altitude,
			g.latitude AS latitude,
			g.longitude AS longitude,
			s.at AS last_changed,
			s.version AS version,
			s.ip AS ip,
			p.id AS place_id,
			p.name AS place_name
		FROM gateways AS g
		JOIN places AS p ON g.place_id = p.id
		JOIN roles_in_gateway AS r ON g.id = r.gateway_id
		JOIN verified_identities AS v ON v.identity_id = r.identity_id
		LEFT JOIN gateways_status AS s ON s.gateway_id = g.id
		WHERE
			v.user_id = <value name="user_id" type="uuid" />
			AND
			(s.at IS NULL OR s.at =
				(SELECT MAX(at) FROM gateways_status WHERE gateway_id = g.id))
		ORDER BY g.name
		</define>
		<test name="gateways of Pepa Goodman">
			<setup name="another testing gateway Test Gateway 13">
				<sql>INSERT INTO gateways (id, name, place_id, altitude, latitude, longitude)
					VALUES (116084064167771, 'Test Gateway 13',
							'bd8ea40c-91c9-4d8c-8c13-a8332c39a437', 20.5, 10.1, 10.24)</sql>
				<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
						'60c4e3aa-25a7-448d-9a04-5f2194e4ed00',
						116084064167771,
						'cd8c611b-7e8a-43ff-8d35-9e92c74f003d',
						20, 1483456491)</sql>
			</setup>
			<check name="3 gateways of Pepa Goodman">
				<call-query>
					<arg name="user_id">'29d214d4-2057-4e06-b003-b839d0bb1df6'</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">181462068183316</value>
						<value name="name">Test Gateway 1</value>
						<value name="altitude">-1.5</value>
						<value name="latitude">1.5</value>
						<value name="longitude">11.5</value>
						<value name="last_changed">1483553208</value>
						<value name="version">1.0-testing</value>
						<value name="ip">192.168.12.2</value>
						<value type="uuid" name="place_id">16de2f05-8af7-4729-8479-1973590cfa54</value>
						<value name="place_name">Test Place 1</value>
					</row>
					<row>
						<value type="uuid" name="id">116084064167771</value>
						<value name="name">Test Gateway 13</value>
						<value name="altitude">20.5</value>
						<value name="latitude">10.1</value>
						<value name="longitude">10.24</value>
						<null name="last_changed" />
						<null name="version" />
						<null name="ip" />
						<value type="uuid" name="place_id">bd8ea40c-91c9-4d8c-8c13-a8332c39a437</value>
						<value name="place_name">Test Place 2</value>
					</row>
					<row>
						<value type="uuid" name="id">140548523101825</value>
						<value name="name">Test Gateway 2</value>
						<value name="altitude">-2.5</value>
						<value name="latitude">2.5</value>
						<value name="longitude">22.5</value>
						<value name="last_changed">1483454300</value>
						<value name="version">1.0-master</value>
						<value name="ip">192.168.11.1</value>
						<value type="uuid" name="place_id">bd8ea40c-91c9-4d8c-8c13-a8332c39a437</value>
						<value name="place_name">Test Place 2</value>
					</row>
				</expect>
			</check>
			<teardown name="delete Test Gateway 13">
				<sql>DELETE FROM roles_in_gateway WHERE id = '60c4e3aa-25a7-448d-9a04-5f2194e4ed00'</sql>
				<sql>DELETE FROM gateways WHERE id = 116084064167771</sql>
			</teardown>
		</test>
		<test name="gateways of Franta Kutil">
			<check name="1 gateway of Franta Kutil">
				<call-query>
					<arg name="user_id">'014ca448-26d7-4051-ad11-8c9e37343f0d'</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">140548523101825</value>
						<value name="name">Test Gateway 2</value>
						<value name="altitude">-2.5</value>
						<value name="latitude">2.5</value>
						<value name="longitude">22.5</value>
						<value name="last_changed">1483454300</value>
						<value name="version">1.0-master</value>
						<value name="ip">192.168.11.1</value>
						<value type="uuid" name="place_id">bd8ea40c-91c9-4d8c-8c13-a8332c39a437</value>
						<value name="place_name">Test Place 2</value>
					</row>
				</expect>
			</check>
		</test>
		<test name="gateways of Jack Sparrow">
			<check name="1 gateway of Jack Sparrow">
				<call-query>
					<arg name="user_id">'d67713ff-de75-43c4-917b-88f0048b7ccf'</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">181462068183316</value>
						<value name="name">Test Gateway 1</value>
						<value name="altitude">-1.5</value>
						<value name="latitude">1.5</value>
						<value name="longitude">11.5</value>
						<value name="last_changed">1483553208</value>
						<value name="version">1.0-testing</value>
						<value name="ip">192.168.12.2</value>
						<value type="uuid" name="place_id">16de2f05-8af7-4729-8479-1973590cfa54</value>
						<value name="place_name">Test Place 1</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="locations.create">
		<define>INSERT INTO locations (id, name, gateway_id) VALUES (
				<value name="id" type="uuid" />,
				<value name="name" type="varchar" />,
				<value name="gateway_id" type="int64" />)</define>
		<test name="insert location works">
			<check name="simple insert">
				<call-query>
					<arg name="id">'c94d43df-84da-4200-b5a2-1d3594ac7645'</arg>
					<arg name="name">'living room'</arg>
					<arg name="gateway_id">140548523101825</arg>
				</call-query>
				<sql>SELECT id, name, gateway_id FROM locations WHERE id = 'c94d43df-84da-4200-b5a2-1d3594ac7645'</sql>
				<expect>
					<row>
						<value type="uuid" name="id">c94d43df-84da-4200-b5a2-1d3594ac7645</value>
						<value name="name">living room</value>
						<value type="uuid" name="gateway_id">140548523101825</value>
					</row>
				</expect>
			</check>
			<teardown name="clean up 'living room'">
				<sql>DELETE FROM locations WHERE id = 'c94d43df-84da-4200-b5a2-1d3594ac7645'</sql>
			</teardown>
		</test>
		<test name="insert conflicting location">
			<setup name="prepare a conflicting location">
				<sql>INSERT INTO locations (id, name, gateway_id) VALUES (
						'c94d43df-84da-4200-b5a2-1d3594ac7645',
						'living room',
						140548523101825)</sql>
			</setup>
			<check name="same id fails">
				<call-query>
					<arg name="id">'c94d43df-84da-4200-b5a2-1d3594ac7645'</arg>
					<arg name="name">'kitchen'</arg>
					<arg name="gateway_id">140548523101825</arg>
				</call-query>
				<expect>
					<fail-insert table="locations" conflict="id" />
				</expect>
			</check>
			<teardown name="clean up 'living room'">
				<sql>DELETE FROM locations WHERE id = 'c94d43df-84da-4200-b5a2-1d3594ac7645'</sql>
			</teardown>
		</test>
		<test name="insert location for non-existing gateway">
			<check name="fail with non-existing gateway">
				<call-query>
					<arg name="id">'c94d43df-84da-4200-b5a2-1d3594ac7645'</arg>
					<arg name="name">'kitchen'</arg>
					<arg name="gateway_id">118453478507226</arg>
				</call-query>
				<expect>
					<fail-insert table="locations" conflict="gateway_id" />
				</expect>
			</check>
		</test>
	</query>

	<query id="locations.fetch.by.id">
		<define>
		SELECT
			l.name AS name,
			l.gateway_id AS gateway_id
		FROM locations AS l
		WHERE l.id = <value name="id" type="uuid" />
		</define>
		<!-- TODO: place_id should be not-null -->
		<test name="simple test">
			<setup name="create locations">
				<sql>INSERT INTO locations (id, name, gateway_id)
					VALUES ('0a2000c7-420a-4558-a981-1c67e36c2ee4', 'Test Location 1', 181462068183316)</sql>
				<sql>INSERT INTO locations (id, name, gateway_id)
					VALUES ('966d40f3-3967-4a4b-8ad6-40bad688008b', 'Test Location 2', 140548523101825)</sql>
				<sql>INSERT INTO locations (id, name, gateway_id)
					VALUES ('dc761ed8-baa3-434a-b5c0-b23a80859efe', 'Test Location 3', 144426044538750)</sql>
			</setup>
			<check name="select 'Test Location 1'">
				<call-query>
					<arg name="id">'0a2000c7-420a-4558-a981-1c67e36c2ee4'</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Test Location 1</value>
						<value name="gateway_id">181462068183316</value>
					</row>
				</expect>
			</check>
			<check name="select 'Test Location 2'">
				<call-query>
					<arg name="id">'966d40f3-3967-4a4b-8ad6-40bad688008b'</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Test Location 2</value>
						<value name="gateway_id">140548523101825</value>
					</row>
				</expect>
			</check>
			<check name="select 'Test Location 3'">
				<call-query>
					<arg name="id">'dc761ed8-baa3-434a-b5c0-b23a80859efe'</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Test Location 3</value>
						<value name="gateway_id">144426044538750</value>
					</row>
				</expect>
			</check>
			<check name="select non-existing">
				<call-query>
					<arg name="id">'eb3b29b5-53b4-4052-b2e7-06177fb66a0a'</arg>
				</call-query>
				<expect />
			</check>
			<teardown name="delete locations">
				<sql>DELETE FROM locations WHERE id = '0a2000c7-420a-4558-a981-1c67e36c2ee4'</sql>
				<sql>DELETE FROM locations WHERE id = '966d40f3-3967-4a4b-8ad6-40bad688008b'</sql>
				<sql>DELETE FROM locations WHERE id = 'dc761ed8-baa3-434a-b5c0-b23a80859efe'</sql>
			</teardown>
		</test>
	</query>

	<query id="locations.fetch.by.id.and.gateway_id">
		<define>
		SELECT
			l.name AS name,
			l.gateway_id AS gateway_id
		FROM locations AS l
		WHERE
			l.id = <value name="id" type="uuid" />
			AND
			l.gateway_id = <value name="gateway_id" type="uuid" />
		</define>
		<test name="simple test">
			<check name="find the Kitchen by Test Gateway 1">
				<call-query>
					<arg name="id">'f5ad3e17-aa65-4291-8916-1d21cdf6b4bb'</arg>
					<arg name="gateway_id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Kitchen</value>
						<value name="gateway_id">181462068183316</value>
					</row>
				</expect>
			</check>
			<check name="find the Kitchen in Test Gateway 2 (it is not there)">
				<call-query>
					<arg name="id">'f5ad3e17-aa65-4291-8916-1d21cdf6b4bb'</arg>
					<arg name="gateway_id">140548523101825</arg>
				</call-query>
				<expect />
			</check>
		</test>
	</query>

	<query id="locations.fetch.by.gateway_id">
		<define>
		SELECT
			l.id AS id,
			l.name AS name,
			l.gateway_id AS gateway_id
		FROM locations AS l
		WHERE
			l.gateway_id = <value name="gateway_id" type="uuid" />
		ORDER BY l.id
		</define>
		<test name="simple test">
			<check name="list locations in Test Gateway 1">
				<call-query>
					<arg name="gateway_id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">3a91f58e-579e-41f2-a17b-3fb6166abb69</value>
						<value name="name">Livingroom</value>
						<value name="gateway_id">181462068183316</value>
					</row>
					<row>
						<value type="uuid" name="id">f5ad3e17-aa65-4291-8916-1d21cdf6b4bb</value>
						<value name="name">Kitchen</value>
						<value name="gateway_id">181462068183316</value>
					</row>
				</expect>
			</check>
			<check name="list locations in Test Gateway 2">
				<call-query>
					<arg name="gateway_id">140548523101825</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">7a336a66-da55-4bf0-ba37-00461845823b</value>
						<value name="name">Bedroom</value>
						<value name="gateway_id">140548523101825</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="locations.update">
		<define>UPDATE locations SET name = <value name="name" type="varchar" />
				WHERE id = <value name="id" type="uuid" /></define>
	</query>

	<query id="locations.remove">
		<define>DELETE FROM locations WHERE id = <value name="id" type="uuid" /></define>
	</query>

	<query id="users.create">
		<define>INSERT INTO users (id, first_name, last_name) VALUES (
				<value name="id" type="uuid" />,
				<value name="first_name" type="varchar" />,
				<value name="last_name" type="varchar" />)</define>
	</query>

	<query id="users.fetch.by.id">
		<define>SELECT first_name, last_name FROM users
				WHERE id = <value name="id" type="uuid" /></define>
		<test name="simple">
			<check name="fetch 'Pepa Goodman'">
				<call-query>
					<arg name="id">'29d214d4-2057-4e06-b003-b839d0bb1df6'</arg>
				</call-query>
				<expect>
					<row>
						<value name="first_name">Pepa</value>
						<value name="last_name">Goodman</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="identities.create">
		<define>INSERT INTO identities (id, email) VALUES (
				<value name="id" type="uuid" />,
				<value name="email" type="varchar" />)</define>
		<test name="fail on integrity">
			<check name="duplicate id">
				<call-query>
					<arg name="id">'d184702c-7003-49a7-9ded-4c4fe5d88881'</arg>
					<arg name="email">'another_franta@example.org'</arg>
				</call-query>
				<expect>
					<fail-insert table="identities" conflict="id" />
				</expect>
			</check>
			<check name="duplicate e-mail">
				<call-query>
					<arg name="id">'abfda3cd-01e2-4b8a-8eb7-be1af49b0da8'</arg>
					<arg name="email">'franta@example.org'</arg>
				</call-query>
				<expect>
					<fail-insert table="identities" conflict="email" />
				</expect>
			</check>
		</test>
	</query>

	<query id="identities.fetch.by.id">
		<define>SELECT email FROM identities WHERE id = <value name="id" type="uuid" /></define>
		<test name="simple">
			<check name="fetch 'pepa2@example.org'">
				<call-query>
					<arg name="id">'cd8c611b-7e8a-43ff-8d35-9e92c74f003d'</arg>
				</call-query>
				<expect>
					<row>
						<value name="email">pepa2@example.org</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="identities.fetch.by.email">
		<define>SELECT id, email FROM identities WHERE email = <value name="email" type="varchar" /></define>
		<test name="simple">
			<check name="fetch 'jack.sparrow@example.org'">
				<call-query>
					<arg name="email">'jack.sparrow@example.org'</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">b5696add-11c4-4b51-834a-c14ddd672db4</value>
						<value name="email">jack.sparrow@example.org</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="identities.remove">
		<define>DELETE FROM identities WHERE id = <value name="id" type="uuid" /></define>
		<test name="fail on integrity">
			<check name="cannot remove referenced identity">
				<call-query>
					<arg name="id">'b5696add-11c4-4b51-834a-c14ddd672db4'</arg>
				</call-query>
				<sql>SELECT id, email FROM identities WHERE id = 'b5696add-11c4-4b51-834a-c14ddd672db4'</sql>
				<expect>
					<fail-delete table="identities" conflict="referenced by verified_identities" />
					<row>
						<value type="uuid" name="id">b5696add-11c4-4b51-834a-c14ddd672db4</value>
						<value name="email">jack.sparrow@example.org</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="verified_identities.create">
		<define>
		INSERT INTO verified_identities (
			id, identity_id, user_id, provider, picture, access_token
		) VALUES (
			<value name="id" type="uuid" />,
			<value name="identity_id" type="uuid" />,
			<value name="user_id" type="uuid" />,
			<value name="provider" type="varchar" />,
			<value name="picture" type="varchar" />,
			<value name="access_token" type="varchar" />
		)
		</define>
	</query>

	<query id="verified_identities.fetch.by.id">
		<define>
		SELECT
			v.identity_id AS identity_id,
			v.user_id AS user_id,
			v.provider AS provider,
			v.picture AS picture,
			v.access_token AS access_token,
			i.email AS identity_email,
			u.first_name AS user_first_name,
			u.last_name AS user_last_name
		FROM verified_identities AS v
		JOIN identities AS i ON v.identity_id = i.id
		JOIN users AS u ON v.user_id = u.id
		WHERE
			v.id = <value name="id" type="uuid" />
		</define>
		<test name="simple">
			<check name="Jack Sparrow">
				<call-query>
					<arg name="id">'b6e70e5a-dccd-4898-8c17-114160a808c6'</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="identity_id">b5696add-11c4-4b51-834a-c14ddd672db4</value>
						<value type="uuid" name="user_id">d67713ff-de75-43c4-917b-88f0048b7ccf</value>
						<value name="provider">test</value>
						<null name="picture" />
						<null name="access_token" />
						<value name="identity_email">jack.sparrow@example.org</value>
						<value name="user_first_name">Jack</value>
						<value name="user_last_name">Sparrow</value>
					</row>
				</expect>
			</check>
			<check name="assure picture and access_token are really NULL and not just empty">
				<sql>SELECT 'picture and access_token are NULL' AS null_check FROM verified_identities
					WHERE id = 'b6e70e5a-dccd-4898-8c17-114160a808c6'
					AND picture IS NULL and access_token is NULL</sql>
				<expect>
					<row>
						<value name="null_check">picture and access_token are NULL</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="verified_identities.fetch.by.email.and.provider">
		<define>
		SELECT
			v.id AS id,
			v.identity_id AS identity_id,
			v.user_id AS user_id,
			v.picture AS picture,
			v.provider AS provider,
			v.access_token AS access_token,
			i.email AS identity_email,
			u.first_name AS user_first_name,
			u.last_name AS user_last_name
		FROM verified_identities AS v
		JOIN identities AS i ON v.identity_id = i.id
		JOIN users AS u ON v.user_id = u.id
		WHERE
			i.email = <value name="email" type="varchar" />
			AND
			v.provider = <value name="provider" type="varchar" />
		</define>
		<test name="simple">
			<check name="franta@example.org via provider test">
				<call-query>
					<arg name="email">'franta@example.org'</arg>
					<arg name="provider">'test'</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">a08909d5-0d59-4605-b1cb-99d9d813f657</value>
						<value type="uuid" name="identity_id">d184702c-7003-49a7-9ded-4c4fe5d88881</value>
						<value type="uuid" name="user_id">014ca448-26d7-4051-ad11-8c9e37343f0d</value>
						<null name="picture" />
						<value name="provider">test</value>
						<null name="access_token" />
						<value name="identity_email">franta@example.org</value>
						<value name="user_first_name">Franta</value>
						<value name="user_last_name">Kutil</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="verified_identities.fetch.by.email">
		<define>
		SELECT
			v.id AS id,
			v.identity_id AS identity_id,
			v.user_id AS user_id,
			v.picture AS picture,
			v.provider AS provider,
			v.access_token AS access_token,
			i.email AS identity_email,
			u.first_name AS user_first_name,
			u.last_name AS user_last_name
		FROM verified_identities AS v
		JOIN identities AS i ON v.identity_id = i.id
		JOIN users AS u ON v.user_id = u.id
		WHERE
			i.email = <value name="email" type="varchar" />
		ORDER BY provider
		</define>
		<test name="show we may have more valid results">
			<setup name="verify existing identity with different provider">
				<sql>INSERT INTO users (id, first_name, last_name) VALUES
					('c99bdcca-e0f7-47fe-ad09-eb43e7854799', 'Attacker', 'Coming')</sql>
				<!-- verify franta2@example.org by 'fake-provider' -->
				<sql>INSERT INTO verified_identities (id, identity_id, user_id, provider) VALUES (
					'8ec6ca32-9f2b-430b-8b7e-e54a726fde87',
					'aeec55a1-b8f5-4ae8-b8a9-1a35781b01d1',
					'c99bdcca-e0f7-47fe-ad09-eb43e7854799',
					'fake-provider')</sql>
			</setup>
			<check name="we get 2 users, one with fake-provider">
				<call-query>
					<arg name="email">'franta2@example.org'</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">8ec6ca32-9f2b-430b-8b7e-e54a726fde87</value>
						<value type="uuid" name="identity_id">aeec55a1-b8f5-4ae8-b8a9-1a35781b01d1</value>
						<value type="uuid" name="user_id">c99bdcca-e0f7-47fe-ad09-eb43e7854799</value>
						<null name="picture" />
						<value name="provider">fake-provider</value>
						<null name="access_token" />
						<value name="identity_email">franta2@example.org</value>
						<value name="user_first_name">Attacker</value>
						<value name="user_last_name">Coming</value>
					</row>
					<row>
						<value type="uuid" name="id">453ddb82-76ee-437a-b058-64998193a05c</value>
						<value type="uuid" name="identity_id">aeec55a1-b8f5-4ae8-b8a9-1a35781b01d1</value>
						<value type="uuid" name="user_id">014ca448-26d7-4051-ad11-8c9e37343f0d</value>
						<null name="picture" />
						<value name="provider">test</value>
						<null name="access_token" />
						<value name="identity_email">franta2@example.org</value>
						<value name="user_first_name">Franta</value>
						<value name="user_last_name">Kutil</value>
					</row>
				</expect>
			</check>
			<teardown name="delete the Attacker Coming">
				<sql>DELETE FROM verified_identities WHERE id = '8ec6ca32-9f2b-430b-8b7e-e54a726fde87'</sql>
				<sql>DELETE FROM users WHERE id = 'c99bdcca-e0f7-47fe-ad09-eb43e7854799'</sql>
			</teardown>
		</test>
	</query>

	<query id="verified_identities.update">
		<define>
		UPDATE verified_identities SET
			picture = <value name="picture" type="varchar" />,
			access_token = <value name="access_token" type="varchar" />
		WHERE
			id = <value name="id" type="uuid" />
		</define>
	</query>

	<query id="verified_identities.remove">
		<define>DELETE FROM verified_identities
				WHERE id = <value name="id" type="uuid" /></define>
	</query>

	<query id="roles_in_gateway.create">
		<define>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
			<value name="id" type="uuid" />,
			<value name="gateway_id" type="uuid" />,
			<value name="identity_id" type="uuid" />,
			<value name="level" type="integer" />,
			<value name="created" type="bigint" />)</define>
	</query>

	<query id="roles_in_gateway.fetch.by.id">
		<define>
		SELECT
			r.gateway_id AS gateway_id,
			r.identity_id AS identity_id,
			r.level AS level,
			r.created AS created,
			i.email AS identity_email
		FROM roles_in_gateway AS r
		JOIN identities AS i ON r.identity_id = i.id
		WHERE
			r.id = <value name="id" type="uuid" />
		</define>
		<test name="simple">
			<check name="pepa@example.org is admin of Test Gateway 1">
				<call-query>
					<arg name="id">'faabc96a-12b4-421a-8f4b-00ae1f75c11f'</arg>
				</call-query>
				<expect>
					<row>
						<value name="gateway_id">181462068183316</value>
						<value type="uuid" name="identity_id">4264d04a-4a50-4a53-a765-dc5a7cdce6f1</value>
						<value name="level">10</value>
						<value name="created">1483456377</value>
						<value name="identity_email">pepa@example.org</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="roles_in_gateway.fetch.by.gateway_id">
		<define>
		SELECT
			r.id AS id,
			r.gateway_id AS gateway_id,
			r.identity_id AS identity_id,
			r.level AS level,
			r.created AS created,
			i.email AS identity_email
		FROM roles_in_gateway AS r
		JOIN identities AS i ON r.identity_id = i.id
		WHERE
			r.gateway_id = <value name="gateway_id" type="int64" />
		ORDER BY level
		</define>
		<test name="fetch roles of gateway">
			<check name="Test Gateway 1 has 3 users">
				<call-query>
					<arg name="gateway_id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">faabc96a-12b4-421a-8f4b-00ae1f75c11f</value>
						<value name="gateway_id">181462068183316</value>
						<value type="uuid" name="identity_id">4264d04a-4a50-4a53-a765-dc5a7cdce6f1</value>
						<value name="level">10</value>
						<value name="created">1483456377</value>
						<value name="identity_email">pepa@example.org</value>
					</row>
					<row>
						<value type="uuid" name="id">f3733b47-d47c-4fa1-b2ce-2101dfa33ca1</value>
						<value name="gateway_id">181462068183316</value>
						<value type="uuid" name="identity_id">cd8c611b-7e8a-43ff-8d35-9e92c74f003d</value>
						<value name="level">20</value>
						<value name="created">1483456378</value>
						<value name="identity_email">pepa2@example.org</value>
					</row>
					<row>
						<value type="uuid" name="id">aee235a1-ac89-4553-b185-d689faeeeee3</value>
						<value name="gateway_id">181462068183316</value>
						<value type="uuid" name="identity_id">b5696add-11c4-4b51-834a-c14ddd672db4</value>
						<value name="level">30</value>
						<value name="created">1483456379</value>
						<value name="identity_email">jack.sparrow@example.org</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="roles_in_gateway.remove">
		<define>DELETE FROM roles_in_gateway WHERE id = <value name="id" type="uuid" /></define>
	</query>

	<query id="roles_in_gateway.remove.user">
		<define>
		DELETE FROM roles_in_gateway
			WHERE identity_id IN
				(SELECT identity_id
					FROM verified_identities
					WHERE user_id = <value name="user_id" type="uuid" />)
				AND
				gateway_id = <value name="gateway_id" type="int64" />
		</define>
		<test name="simple test">
			<setup name="prepare a user to unregister">
				<sql>INSERT INTO users (id, first_name, last_name) VALUES
					('d708df0f-39a3-4df1-a758-194f5321755f', 'Random', 'Human')</sql>
				<sql>INSERT INTO identities (id, email) VALUES
					('47daa797-5684-4a52-9e71-1207121e93b1', 'human@example.org')</sql>
				<sql>INSERT INTO verified_identities (id, identity_id, user_id, provider) VALUES (
						'183ac47e-e37a-4820-9793-c98a50e8911d',
						'47daa797-5684-4a52-9e71-1207121e93b1',
						'd708df0f-39a3-4df1-a758-194f5321755f',
						'test')</sql>
				<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
						'087d9181-2b9c-40c1-8cd6-93c3c02c0e7b',
						144426044538750,
						'47daa797-5684-4a52-9e71-1207121e93b1',
						10, 1483426313)</sql>
			</setup>
			<check name="Check before trivial remove">
				<sql>SELECT COUNT(*) AS before_remove FROM roles_in_gateway WHERE gateway_id = 144426044538750</sql>
				<expect>
					<row>
						<value name="before_remove">1</value>
					</row>
				</expect>
			</check>
			<check name="Check trivial remove">
				<call-query>
					<arg name="user_id">'d708df0f-39a3-4df1-a758-194f5321755f'</arg>
					<arg name="gateway_id">144426044538750</arg>
				</call-query>

				<sql>SELECT COUNT(*) AS after_remove FROM roles_in_gateway WHERE gateway_id = 144426044538750</sql>
				<expect>
					<row>
						<value name="after_remove">0</value>
					</row>
				</expect>
			</check>
			<teardown name="clean up user to unregister">
				<sql>DELETE FROM verified_identities WHERE id = '183ac47e-e37a-4820-9793-c98a50e8911d'</sql>
				<sql>DELETE FROM identities WHERE id = '47daa797-5684-4a52-9e71-1207121e93b1'</sql>
				<sql>DELETE FROM users WHERE id = 'd708df0f-39a3-4df1-a758-194f5321755f'</sql>
			</teardown>
		</test>
		<test name="multiple roles to be deleted">
			<setup name="prepare roles to unregister">
				<sql>INSERT INTO users (id, first_name, last_name) VALUES
					('d708df0f-39a3-4df1-a758-194f5321755f', 'Random', 'Human')</sql>
				<sql>INSERT INTO identities (id, email) VALUES
					('47daa797-5684-4a52-9e71-1207121e93b1', 'human@example.org')</sql>
				<sql>INSERT INTO identities (id, email) VALUES
					('5c62555d-62b9-4295-8be9-1d03f746f855', 'human2@example.org')</sql>
				<sql>INSERT INTO identities (id, email) VALUES
					('75509c32-941e-4aa0-beee-5162fefe1e30', 'not-delete@example.org')</sql>
				<sql>INSERT INTO verified_identities (id, identity_id, user_id, provider) VALUES (
						'183ac47e-e37a-4820-9793-c98a50e8911d',
						'47daa797-5684-4a52-9e71-1207121e93b1',
						'd708df0f-39a3-4df1-a758-194f5321755f',
						'test')</sql>
				<sql>INSERT INTO verified_identities (id, identity_id, user_id, provider) VALUES (
						'5e50f717-236b-4c3a-84ba-26baa17920b1',
						'5c62555d-62b9-4295-8be9-1d03f746f855',
						'd708df0f-39a3-4df1-a758-194f5321755f',
						'alternative')</sql>
				<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
						'087d9181-2b9c-40c1-8cd6-93c3c02c0e7b',
						144426044538750,
						'5c62555d-62b9-4295-8be9-1d03f746f855',
						10, 1483426311)</sql>
				<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
						'37cd7de9-8bb2-469d-8b24-b951666b7d3a',
						144426044538750,
						'47daa797-5684-4a52-9e71-1207121e93b1',
						20, 1483426312)</sql>
				<sql>INSERT INTO roles_in_gateway (id, gateway_id, identity_id, level, created) VALUES (
						'edbf94e4-f313-4f20-9a33-6e27e6ef9f44',
						144426044538750,
						'75509c32-941e-4aa0-beee-5162fefe1e30',
						10, 1483426313)</sql>
			</setup>
			<check name="delete roles for user Random Human only">
				<call-query>
					<arg name="user_id">'d708df0f-39a3-4df1-a758-194f5321755f'</arg>
					<arg name="gateway_id">144426044538750</arg>
				</call-query>

				<sql>SELECT id FROM roles_in_gateway WHERE gateway_id = 144426044538750</sql>
				<expect>
					<row>
						<value type="uuid" name="id">edbf94e4-f313-4f20-9a33-6e27e6ef9f44</value>
					</row>
				</expect>
			</check>
			<teardown name="cleanup roles to unregister">
				<sql>DELETE FROM roles_in_gateway WHERE id = 'edbf94e4-f313-4f20-9a33-6e27e6ef9f44'</sql>
				<sql>DELETE FROM verified_identities WHERE id = '5e50f717-236b-4c3a-84ba-26baa17920b1'</sql>
				<sql>DELETE FROM verified_identities WHERE id = '183ac47e-e37a-4820-9793-c98a50e8911d'</sql>
				<sql>DELETE FROM identities WHERE id = '75509c32-941e-4aa0-beee-5162fefe1e30'</sql>
				<sql>DELETE FROM identities WHERE id = '5c62555d-62b9-4295-8be9-1d03f746f855'</sql>
				<sql>DELETE FROM identities WHERE id = '47daa797-5684-4a52-9e71-1207121e93b1'</sql>
				<sql>DELETE FROM users WHERE id = 'd708df0f-39a3-4df1-a758-194f5321755f'</sql>
			</teardown>
		</test>
	</query>

	<query id="roles_in_gateway.remove.all">
		<define>
		DELETE FROM roles_in_gateway
		WHERE gateway_id = <value name="gateway_id" type="int64" />
		</define>
	</query>

	<query id="roles_in_gateway.is.registered">
		<define>SELECT COUNT(*) > 0 AS registered FROM roles_in_gateway
			WHERE gateway_id = <value name="gateway_id" type="int64" /></define>
		<test name="simple test">
			<check name="Test Gateway 1 is registered">
				<call-query>
					<arg name="gateway_id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<true name="registered" />
					</row>
				</expect>
			</check>
			<check name="Test Gateway 3 is not registered">
				<call-query>
					<arg name="gateway_id">144426044538750</arg>
				</call-query>
				<expect>
					<row>
						<false name="registered" />
					</row>
				</expect>
			</check>

		</test>
	</query>

	<query id="roles_in_gateway.has.only.given.level.except">
		<define>
		SELECT COUNT(*) > 0 AS result
			FROM roles_in_gateway
			WHERE level > <value name="level" type="integer" />
				AND
				gateway_id = <value name="gateway_id" type="int64" />
				AND
				identity_id NOT IN
				(SELECT identity_id
					FROM verified_identities
					WHERE user_id = <value name="user_id" type="uuid" />)
		</define>
	</query>

	<query id="roles_in_gateway.fetch.access_level">
		<define>
		SELECT
			MIN(r.level) AS level
		FROM roles_in_gateway AS r
		JOIN verified_identities AS v ON v.identity_id = r.identity_id
		WHERE
			r.gateway_id = <value name="gateway_id" type="int64" />
			AND
			v.user_id = <value name="user_id" type="uuid" />
		</define>
		<test name="fetch minimal access_level">
			<check name="Pepa Goodman is both admin and user for Test Gateway 1, resolve to admin">
				<call-query>
					<arg name="gateway_id">181462068183316</arg>
					<arg name="user_id">'29d214d4-2057-4e06-b003-b839d0bb1df6'</arg>
				</call-query>
				<expect>
					<row>
						<value name="level">10</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="roles_in_gateway.fetch.accessible.gateways">
		<define>
		SELECT
			DISTINCT g.id AS id,
			g.name AS name,
			g.altitude AS altitude,
			g.latitude AS latitude,
			g.longitude AS longitude,
			s.at AS last_changed,
			s.version AS version,
			s.ip AS ip
		FROM gateways AS g
		JOIN gateways_status AS s ON s.gateway_id = g.id
		JOIN roles_in_gateway AS r ON r.gateway_id = g.id
		JOIN verified_identities AS v ON v.identity_id = r.identity_id
		WHERE
			r.level &gt;= <value name="at_least" type="integer" />
			AND
			v.user_id = <value name="user_id" type="uuid" />
			AND
			(s.at IS NULL OR s.at =
				(SELECT MAX(at) FROM gateways_status WHERE gateway_id = g.id))
		ORDER BY g.name
		</define>
		<test name="find places of Pepa Goodman">
			<check name="expect both Test Gateway 1 and Test Gateway 2">
				<call-query>
					<arg name="at_least">10</arg>
					<arg name="user_id">'29d214d4-2057-4e06-b003-b839d0bb1df6'</arg>
				</call-query>
				<expect>
					<row>
						<value name="id">181462068183316</value>
						<value name="name">Test Gateway 1</value>
						<value name="altitude">-1.5</value>
						<value name="latitude">1.5</value>
						<value name="longitude">11.5</value>
						<value name="last_changed">1483553208</value>
						<value name="version">1.0-testing</value>
						<value name="ip">192.168.12.2</value>
					</row>
					<row>
						<value name="id">140548523101825</value>
						<value name="name">Test Gateway 2</value>
						<value name="altitude">-2.5</value>
						<value name="latitude">2.5</value>
						<value name="longitude">22.5</value>
						<value name="last_changed">1483454300</value>
						<value name="version">1.0-master</value>
						<value name="ip">192.168.11.1</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="legacy_gateways.fetch.by.id">
		<define>
		SELECT
			g.name AS name,
			g.place_id AS place_id,
			p.name AS place_name,
			g.altitude AS altitude,
			g.latitude AS latitude,
			g.longitude AS longitude,
			s.at AS last_changed,
			s.version AS version,
			s.ip AS ip,
			g.roles_count AS roles_count,
			g.devices_count AS devices_count,
			g.owner_id AS owner_id,
			o.first_name AS owner_first_name,
			o.last_name AS owner_last_name,
			(SELECT level FROM users_of_gateway
				WHERE
					gateway_id = g.id
					AND
					user_id = <value name="user_id" type="uuid" />)
			AS access_level
		FROM legacy_gateways AS g
		LEFT JOIN places AS p ON g.place_id = p.id
		LEFT JOIN gateways_status AS s ON s.gateway_id = g.id
		LEFT JOIN users AS o ON o.id = g.owner_id
		WHERE
			g.id = <value name="id" type="int64" />
			AND
			(s.at IS NULL OR s.at =
				(SELECT MAX(at) FROM gateways_status WHERE gateway_id = g.id))
		</define>
		<test name="simple test">
			<check name="fetch Test Gateway 2 as Pepa Goodman and check it is owned by Franta Kutil">
				<call-query>
					<arg name="user_id">'29d214d4-2057-4e06-b003-b839d0bb1df6'</arg>
					<arg name="id">140548523101825</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Test Gateway 2</value>
						<value type="uuid" name="place_id">bd8ea40c-91c9-4d8c-8c13-a8332c39a437</value>
						<value name="place_name">Test Place 2</value>
						<value name="altitude">-2.5</value>
						<value name="latitude">2.5</value>
						<value name="longitude">22.5</value>
						<value name="last_changed">1483454300</value>
						<value name="version">1.0-master</value>
						<value name="ip">192.168.11.1</value>
						<value name="roles_count">2</value>
						<value name="devices_count">0</value>
						<value type="uuid" name="owner_id">014ca448-26d7-4051-ad11-8c9e37343f0d</value>
						<value name="owner_first_name">Franta</value>
						<value name="owner_last_name">Kutil</value>
						<value name="access_level">10</value>
					</row>
				</expect>
			</check>
			<check name="fetch Test Gateway 1 as Jack Sparrow and check it is owned by Pepa Goodman">
				<call-query>
					<arg name="user_id">'d67713ff-de75-43c4-917b-88f0048b7ccf'</arg>
					<arg name="id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<value name="name">Test Gateway 1</value>
						<value type="uuid" name="place_id">16de2f05-8af7-4729-8479-1973590cfa54</value>
						<value name="place_name">Test Place 1</value>
						<value name="altitude">-1.5</value>
						<value name="latitude">1.5</value>
						<value name="longitude">11.5</value>
						<value name="last_changed">1483553208</value>
						<value name="version">1.0-testing</value>
						<value name="ip">192.168.12.2</value>
						<value name="roles_count">3</value>
						<value name="devices_count">2</value>
						<value type="uuid" name="owner_id">29d214d4-2057-4e06-b003-b839d0bb1df6</value>
						<value name="owner_first_name">Pepa</value>
						<value name="owner_last_name">Goodman</value>
						<value name="access_level">30</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="legacy_gateways.fetch.accessible">
		<define>
		SELECT
			DISTINCT g.id AS id,
			g.name AS name,
			g.altitude AS altitude,
			g.latitude AS latitude,
			g.longitude AS longitude,
			s.at AS last_changed,
			s.version AS version,
			s.ip AS ip,
			g.place_id AS place_id,
			p.name AS place_name,
			g.roles_count AS roles_count,
			g.devices_count AS devices_count,
			g.owner_id AS owner_id,
			o.first_name AS owner_first_name,
			o.last_name AS owner_last_name,
			u.level AS access_level
		FROM legacy_gateways AS g
		JOIN users_of_gateway AS u ON g.id = u.gateway_id
		LEFT JOIN places AS p ON g.place_id = p.id
		LEFT JOIN gateways_status AS s ON s.gateway_id = g.id
		LEFT JOIN users AS o ON o.id = g.owner_id
		WHERE
			u.user_id = <value name="user_id" type="uuid" />
			AND
			(s.at IS NULL OR s.at =
				(SELECT MAX(at) FROM gateways_status WHERE gateway_id = g.id))
		ORDER BY g.name
		</define>
		<test name="simple">
			<check name="for Jack Sparrow">
				<call-query>
					<arg name="user_id">'d67713ff-de75-43c4-917b-88f0048b7ccf'</arg>
				</call-query>
				<expect>
					<row>
						<value type="uuid" name="id">181462068183316</value>
						<value name="name">Test Gateway 1</value>
						<value name="altitude">-1.5</value>
						<value name="latitude">1.5</value>
						<value name="longitude">11.5</value>
						<value name="last_changed">1483553208</value>
						<value name="version">1.0-testing</value>
						<value name="ip">192.168.12.2</value>
						<value type="uuid" name="place_id">16de2f05-8af7-4729-8479-1973590cfa54</value>
						<value name="place_name">Test Place 1</value>
						<value name="roles_count">3</value>
						<value name="devices_count">2</value>
						<value type="uuid" name="owner_id">29d214d4-2057-4e06-b003-b839d0bb1df6</value>
						<value name="owner_first_name">Pepa</value>
						<value name="owner_last_name">Goodman</value>
						<value name="access_level">30</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="devices.create">
		<define>INSERT INTO devices (
				id,
				gateway_id,
				location_id,
				name,
				type,
				refresh,
				battery,
				signal,
				first_seen,
				last_seen,
				active_since)
			VALUES (
				<value name="id" type="int64" />,
				<value name="gateway_id" type="int64" />,
				<value name="location_id" type="uuid" />,
				<value name="name" type="varchar" />,
				<value name="type" type="smallint" />,
				<value name="refresh" type="integer" />,
				<value name="battery" type="smallint" />,
				<value name="signal" type="smallint" />,
				<value name="first_seen" type="bigint" />,
				<value name="last_seen" type="bigint" />,
				<value name="active_since" type="bigint" />
			)
		</define>
		<test name="create inactive wired device">
			<check name="can create inactive device">
				<call-query>
					<arg name="id">2727934709</arg>
					<arg name="gateway_id">140548523101825</arg>
					<arg name="location_id">NULL</arg>
					<arg name="name">'Test Device X'</arg>
					<arg name="type">0</arg>
					<arg name="refresh">25</arg>
					<arg name="battery">NULL</arg>
					<arg name="signal">NULL</arg>
					<arg name="first_seen">1483553308</arg>
					<arg name="last_seen">1483553308</arg>
					<arg name="active_since">NULL</arg>
				</call-query>
				<sql>SELECT
						id, gateway_id, location_id, name, type,
						refresh, battery, signal, first_seen,
						last_seen, active_since
					FROM devices
					WHERE id = 2727934709 AND gateway_id = 140548523101825</sql>
				<expect>
					<row>
						<value name="id">2727934709</value>
						<value name="gateway_id">140548523101825</value>
						<null name="location_id" />
						<value name="name">Test Device X</value>
						<value name="type">0</value>
						<value name="refresh">25</value>
						<null name="battery" />
						<null name="signal" />
						<value name="first_seen">1483553308</value>
						<value name="last_seen">1483553308</value>
						<null name="active_since" />
					</row>
				</expect>
			</check>
			<teardown name="delete Test Device X">
				<sql>DELETE FROM devices WHERE id = 2727934709 AND gateway_id = 140548523101825</sql>
			</teardown>
		</test>
		<test name="create active wireless device">
			<check name="can create active device">
				<call-query>
					<arg name="id">2751463465</arg>
					<arg name="gateway_id">140548523101825</arg>
					<arg name="location_id">NULL</arg>
					<arg name="name">'Test Device Y'</arg>
					<arg name="type">0</arg>
					<arg name="refresh">35</arg>
					<arg name="battery">100</arg>
					<arg name="signal">50</arg>
					<arg name="first_seen">1483553308</arg>
					<arg name="last_seen">1483553308</arg>
					<arg name="active_since">1483553308</arg>
				</call-query>
				<sql>SELECT
						id, gateway_id, location_id, name, type,
						refresh, battery, signal, first_seen,
						last_seen, active_since
					FROM devices
					WHERE id = 2751463465 AND gateway_id = 140548523101825</sql>
				<expect>
					<row>
						<value name="id">2751463465</value>
						<value name="gateway_id">140548523101825</value>
						<null name="location_id" />
						<value name="name">Test Device Y</value>
						<value name="type">0</value>
						<value name="refresh">35</value>
						<value name="battery">100</value>
						<value name="signal">50</value>
						<value name="first_seen">1483553308</value>
						<value name="last_seen">1483553308</value>
						<value name="active_since">1483553308</value>
					</row>
				</expect>
			</check>
			<teardown name="delete Test Device Y">
				<sql>DELETE FROM devices WHERE id = 2751463465 AND gateway_id = 140548523101825</sql>
			</teardown>
		</test>
	</query>

	<query id="devices.update">
		<define>UPDATE devices SET
				location_id = <value name="location_id" type="uuid" />,
				name = <value name="name" type="varchar" />,
				type = <value name="type" type="smallint" />,
				refresh = <value name="refresh" type="integer" />,
				battery = <value name="battery" type="smallint" />,
				signal = <value name="signal" type="smallint" />,
				active_since = <value name="active_since" type="smallint" />
			WHERE
				id = <value name="id" type="int64" />
				AND
				gateway_id = <value name="gateway_id" type="int64" />
		</define>
		<test name="update Test Device A">
			<check name="update refresh and battery, leave inactive">
				<call-query>
					<arg name="location_id">NULL</arg>
					<arg name="name">'Test Device A'</arg>
					<arg name="type">0</arg>
					<arg name="refresh">20</arg>
					<arg name="battery">40</arg>
					<arg name="signal">80</arg>
					<arg name="id">2731287621</arg>
					<arg name="gateway_id">181462068183316</arg>
					<arg name="active_since">NULL</arg>
				</call-query>
				<sql>SELECT id, gateway_id, refresh, battery
					FROM devices
					WHERE id = 2731287621 AND gateway_id = 181462068183316</sql>
				<expect>
					<row>
						<value name="id">2731287621</value>
						<value name="gateway_id">181462068183316</value>
						<value name="refresh">20</value>
						<value name="battery">40</value>
					</row>
				</expect>
			</check>
			<teardown name="revert refresh and battery of Test Device A">
				<sql>UPDATE devices SET battery = 95, refresh = 5
					WHERE id = 2731287621 AND gateway_id = 181462068183316</sql>
			</teardown>
		</test>
	</query>

	<query id="devices.fetch.from.gateway">
		<define>SELECT
				location_id,
				name,
				type,
				refresh,
				battery,
				signal,
				first_seen,
				last_seen,
				active_since
			FROM devices
			WHERE
				id = <value name="id" type="int64" />
				AND
				gateway_id = <value name="gateway_id" type="int64" />
		</define>
		<test name="fetch existing">
			<check name="Test Device A">
				<call-query>
					<arg name="id">2731287621</arg>
					<arg name="gateway_id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<null name="location_id" />
						<value name="name">Test Device A</value>
						<value name="type">0</value>
						<value name="refresh">5</value>
						<value name="battery">95</value>
						<value name="signal">80</value>
						<value name="first_seen">1483416275</value>
						<value name="last_seen">1483448120</value>
						<null name="active_since" />
					</row>
				</expect>
			</check>
			<check name="Test Device B">
				<call-query>
					<arg name="id">2728733371</arg>
					<arg name="gateway_id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<null name="location_id" />
						<value name="name">Test Device B</value>
						<value name="type">0</value>
						<value name="refresh">15</value>
						<null name="battery" />
						<null name="signal" />
						<value name="first_seen">1483424265</value>
						<value name="last_seen">1483453120</value>
						<value name="active_since">1483434265</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="devices.fetch.active.by.gateway">
		<define>SELECT
				id,
				location_id,
				name,
				type,
				refresh,
				battery,
				signal,
				first_seen,
				last_seen,
				active_since
			FROM devices
			WHERE
				active_since IS NOT NULL
				AND
				gateway_id = <value name="gateway_id" type="int64" />
			ORDER BY id
		</define>
		<test name="fetch active devices of Test Gateway 1">
			<check name="Test Device B and Test Device C">
				<call-query>
					<arg name="gateway_id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<value name="id">2728733371</value>
						<null name="location_id" />
						<value name="name">Test Device B</value>
						<value name="type">0</value>
						<value name="refresh">15</value>
						<null name="battery" />
						<null name="signal" />
						<value name="first_seen">1483424265</value>
						<value name="last_seen">1483453120</value>
						<value name="active_since">1483434265</value>
					</row>
					<row>
						<value name="id">2751463465</value>
						<null name="location_id" />
						<value name="name">Test Device C</value>
						<value name="type">0</value>
						<value name="refresh">15</value>
						<null name="battery" />
						<value name="signal">99</value>
						<value name="first_seen">1483422145</value>
						<value name="last_seen">1483541120</value>
						<value name="active_since">1483444265</value>
					</row>
				</expect>
			</check>
		</test>
	</query>

	<query id="devices.fetch.inactive.by.gateway">
		<define>SELECT
				id,
				location_id,
				name,
				type,
				refresh,
				battery,
				signal,
				first_seen,
				last_seen,
				active_since
			FROM devices
			WHERE
				active_since IS NULL
				AND
				gateway_id = <value name="gateway_id" type="int64" />
		</define>
		<test name="fetch existing">
			<check name="Test Device A">
				<call-query>
					<arg name="gateway_id">181462068183316</arg>
				</call-query>
				<expect>
					<row>
						<value name="id">2731287621</value>
						<null name="location_id" />
						<value name="name">Test Device A</value>
						<value name="type">0</value>
						<value name="refresh">5</value>
						<value name="battery">95</value>
						<value name="signal">80</value>
						<value name="first_seen">1483416275</value>
						<value name="last_seen">1483448120</value>
						<null name="active_since" />
					</row>
				</expect>
			</check>
		</test>
	</query>

</query-set>
