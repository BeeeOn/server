-- File generated by DeviceTransformer

CREATE OR REPLACE FUNCTION get_signal_module_id(device_type integer) RETURNS integer AS $$
	BEGIN
		CASE device_type
			WHEN 0 THEN RETURN 4;
			WHEN 1 THEN RETURN 25;
			ELSE RETURN null;
		END CASE;
		RETURN null;
	END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION insert_modules() returns trigger
AS
$$
	BEGIN
		CASE NEW.device_type

			WHEN 0 THEN

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 0, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 1, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 2, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 3, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 4, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 5, 'NaN', NEW.gateway_id);

			WHEN 1 THEN

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 0, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 1, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 2, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 3, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 4, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 5, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 6, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 7, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 8, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 9, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 10, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 11, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 12, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 13, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 14, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 15, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 16, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 17, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 18, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 19, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 20, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 21, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 22, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 23, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 24, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 25, 'NaN', NEW.gateway_id);

			WHEN 2 THEN

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 0, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 1, 'NaN', NEW.gateway_id);

			WHEN 3 THEN

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 0, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 1, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 2, 'NaN', NEW.gateway_id);

			WHEN 4 THEN

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 0, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 1, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 2, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 3, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 4, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 5, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 6, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 7, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 8, 'NaN', NEW.gateway_id);

			WHEN 5 THEN

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 0, 'NaN', NEW.gateway_id);

			WHEN 6 THEN

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 0, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 1, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 2, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 3, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 4, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 65, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 5, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 11, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 12, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 13, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 14, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 15, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 16, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 17, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 18, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 66, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 19, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 25, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 26, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 27, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 28, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 29, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 30, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 31, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 32, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 67, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 33, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 39, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 40, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 41, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 42, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 43, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 44, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 45, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 46, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 68, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 47, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 53, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 54, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 55, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 56, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 57, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 58, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 59, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 60, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 61, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 62, 'NaN', NEW.gateway_id);

				INSERT INTO module(device_euid, module_id, measured_value, gateway_id)
				VALUES(NEW.device_euid, 63, 'NaN', NEW.gateway_id);

		END CASE;
	RETURN NEW;
END;
$$
LANGUAGE plpgsql;


DROP TRIGGER IF EXISTS new_device_trigger ON device;

CREATE TRIGGER new_device_trigger
AFTER INSERT ON device
FOR EACH ROW
EXECUTE PROCEDURE insert_modules();

CREATE OR REPLACE FUNCTION get_refresh_module_id(device_type numeric) RETURNS smallint AS $$
	BEGIN
		CASE device_type
			WHEN 0 THEN RETURN 5;
			WHEN 2 THEN RETURN 1;
			ELSE RETURN null;
		END CASE;
		RETURN null;
	END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION get_refresh(_gateway_id decimal(20), _device_euid decimal(20)) RETURNS real AS $$
	SELECT measured_value FROM module join device using(gateway_id, device_euid)
		WHERE gateway_id = _gateway_id AND device_euid = _device_euid AND module_id = get_refresh_module_id(device_type)
$$ LANGUAGE SQL;

