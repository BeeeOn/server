[application]
di.runner = all
di.ldpath = .
security.mode = laud

[testing]
enable = yes

[restui]
host = 127.0.0.1
port = 8000
backlog = 8
minThreads = 1
maxThreads = 4
threadIdleTime = 2 s

cors.origins = null, http://localhost:8000
cors.methods = GET, POST, PUT, DELETE
cors.headers = Content-Type, Authorization, X-Requested-With, Referer, Cookie
cors.maxAge = 5 s

[xmlui]
host = 127.0.0.1
port = 8001
ssl.enable = false
backlog = 8
maxThreads = 4
maxQueued = 16
threadIdletime = 2 s
scanDuration = 30 s

[gws]
ws.ssl.enable = false
ws.host = 127.0.0.1
ws.port = 8850
ws.backlog = 8
ws.maxMessageSize = 256
ws.minThreads = 1
ws.maxThreads = 4
ws.threadIdleTime = 2 s

peer.verifier = relaxed

comm.maxMessageSize = 4096
comm.receiveTimeout = 10 ms
comm.sendTimeout = 500 ms
comm.maxBulkDuration = 350 ms
comm.maxBulkSize = 32
comm.minThreads = 1
comm.maxThreads = 4
comm.threadIdletime = 2 s

queue.responseTimeout = 10 s

rate.impl = slidingWindow
rate.perMinute = 500
rate.perHour = 10000

messages.limit = 64

[spec]
devices.xml = ${application.configDir}../t/devices.xml
enums.xml = ${application.configDir}enums.xml
bitmaps.xml = ${application.configDir}bitmaps.xml
types.xml = ${application.configDir}types.xml
restui.ini = ${application.configDir}restui-api.ini

[bundle]
name = beeeon_server
resource.dir = ${application.configDir}../res

[secure]
device_properties.algorithm = aes256
device_properties.passphrase = very unpredictable cow is stomping down down

[session]
manager = system
expire = 30 m
maxPerUser = 10
jwt.secret = three free fleas flew freely through the flu
jwt.algorithm = HS256
jwt.audience = BeeeOn

[apikeys]
enable = yes
file = ${application.configDir}apikeys.properties

[google]
ssl.verifyMode = relaxed
; path to the CA location
ssl.authority = ${application.configDir}../cert/mozilla-cacert-2018-01-17.pem

[facebook]
ssl.verifyMode = relaxed
; path to the CA location
ssl.authority = ${application.configDir}../cert/mozilla-cacert-2018-01-17.pem

[web-app]
google.enable = false
;google.clientSecret =
;google.clientId =
google.redirectUri = http://localhost

facebook.enable = false
;facebook.clientSecret =
;facebook.clientId =
facebook.redirectUri = https://localhost/

[android]
google.enable = false
;google.clientSecret =
;google.clientId =
google.redirectUri = http://localhost

facebook.enable = false
;facebook.clientSecret =
;facebook.clientId =
facebook.redirectUri = https://localhost/

[tester]
google.enable = no
google.clientSecret = ${web-app.google.clientSecret}
google.clientId = ${web-app.google.clientId}
google.redirectUri =

[fcm]
enable = no
;senderId =
;serverKey =

api.uri = https://fcm.googleapis.com/fcm/send
ssl.verifyMode = relaxed
ssl.authority = ${application.configDir}../cert/mozilla-cacert-2018-01-17.pem

[database]
backend = odbc
host = 127.0.0.1
port = 54320
name = postgres
connector = Driver={PostgreSQL};Database=${database.name};Port=${database.port};ServerName=${database.host}
pool = ${restui.maxThreads} + ${xmlui.maxThreads} + ${gws.ws.maxThreads} + ${gws.comm.maxThreads} + ${database.poolBackup}
poolBackup = 4
init =
queries.impl = fs
queries.fs.rootDir = ${application.configDir}../db/pgsql/queries
queries.fs.preserveLines = 1
features = autoCommit=false
timeout = -1

[cassandra]
enable = no
connector = host=${cassandra.host};port=${cassandra.port};io-threads=${cassandra.pool};request-timeout=${cassandra.timeout};
pool = ${restui.maxThreads} + ${xmlui.maxThreads} + ${gws.ws.maxThreads} + ${gws.comm.maxThreads} + ${cassandra.poolBackup}
poolBackup = 4
port = 59042
host = 127.0.0.1
rpcPort = 59160
jmxPort = 57199
storagePort = 7000
init =
features =
cluster.name = BeeeOn Test Cluster
queries.fs.rootDir = ${application.configDir}../db/cql
queries.fs.preserveLines = 1
timeout = -1

[gateway-rpc]
type = fake

async.defaultTimeout = 30 s

[baf]
publish.data.enable = yes
publish.device.enable = yes
publish.gateways.enable = yes
publish.server.enable = yes
publish.identity.enable = yes
publish.zeromq.enable = yes
publish.zeromq.type = PUSH
publish.zeromq.endpoint = tcp://127.0.0.1:8860
publish.zeromq.socket.linger = 0

[events]
finalize.timeout = 1 s

[logging]
channels.split.class = SplitterChannel
channels.split.channels = console, debug

channels.console.class = ColorConsoleChannel
channels.console.pattern = %L%H:%M:%S.%i %P:%I [%p] %t

channels.debug.class = FileChannel
channels.debug.pattern = %s %L%H:%M:%S.%i %P:{%I,%T} [%p] %t (%U:%u)
channels.debug.path = server-testing.log
channels.debug.rotation = daily
channels.debug.flush = true
channels.debug.purgeCount = 2
channels.debug.rotateOnOpen = true

loggers.root.channel = split
loggers.root.level = trace
