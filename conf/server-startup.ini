[application]
di.runner = all
di.ldpath = /usr/lib:/usr/local/lib:/lib:/usr/lib64:/lib64

[restui]
host = 0.0.0.0
port = 8010
ssl.enable = true
;ssl.certificate =
;ssl.key =
;ssl.authority =
;ssl.verifyMode =
backlog = 256
minThreads = 1
maxThreads = 32
threadIdleTime = 4 s

cors.origins =
cors.methods = GET, POST, PUT, DELETE
cors.headers = Content-Type, Authorization, X-Requested-With, Referer, Cookie
cors.maxAge = 2 h

[xmlui]
host = 0.0.0.0
port = 8011
ssl.enable = true
;ssl.certificate =
;ssl.key =
;ssl.authority =
;ssl.verifyMode =
backlog = 256
maxThreads = 32
maxQueued = 64
threadIdletime = 4 s
scanDuration = 2 m

[gws]
ws.ssl.enable = true
;ws.ssl.certificate =
;ws.ssl.key =
;ws.ssl.authority =
;ws.ssl.verifyMode =

peer.verifier = relaxed

ws.host = 0.0.0.0
ws.port = 8012
ws.backlog = 256
ws.maxMessageSize = 256
ws.minThreads = 1
ws.maxThreads = 64
ws.threadIdleTime = 4 s

comm.maxMessageSize = 4096
comm.receiveTimeout = 1 s
comm.sendTimeout = 500 ms
comm.minThreads = 1
comm.maxThreads = 64
comm.threadIdletime = 4 s

queue.responseTimeout = 10 s

[spec]
devices.xml = /etc/beeeon/server/devices.xml
enums.xml = /etc/beeeon/server/enums.xml
bitmaps.xml = /etc/beeeon/server/bitmaps.xml
types.xml = /etc/beeeon/server/types.xml
restui.ini = /etc/beeeon/server/restui-api.ini

[bundle]
name = beeeon_server
resource.dir = /usr/share/beeeon/res

[secure]
device_properties.algorithm = aes256
;device_properties.passphrase =

[session]
manager = system
expire = 48 h
maxPerUser = 10
;jwt.secret =
jwt.algorithm = HS256
jwt.audience = BeeeOn

[apikeys]
enable = yes
file = /etc/beeeon/server/apikeys.properties

[google]
ssl.verifyMode = relaxed
; path to the CA location
ssl.authority = /usr/share/beeeon/cert/mozilla-cacert-2018-01-17.pem

[facebook]
ssl.verifyMode = relaxed
; path to the CA location
ssl.authority = /usr/share/beeeon/cert/mozilla-cacert-2018-01-17.pem

[web-app]
google.enable = false
;google.clientSecret =
;google.clientId =
google.redirectUri = http://localhost

facebook.enable = false
;facebook.clientSecret =
;facebook.clientId =
facebook.redirectUri = https://localhost/

[android]
google.enable = false
;google.clientSecret =
;google.clientId =
google.redirectUri = http://localhost

facebook.enable = false
;facebook.clientSecret =
;facebook.clientId =
facebook.redirectUri = https://localhost/

[tester]
google.enable = no
google.clientSecret = ${web-app.google.clientSecret}
google.clientId = ${web-app.google.clientId}
google.redirectUri =

[fcm]
enable = no
;senderId =
;serverKey =

api.uri = https://fcm.googleapis.com/fcm/send
ssl.verifyMode = relaxed
ssl.authority = /usr/share/beeeon/cert/mozilla-cacert-2018-01-17.pem

[database]
backend = odbc
host = localhost
port = 5432
user = beeeon_user
name = beeeon
connector = Driver={PostgreSQL};Database=${database.name};UserName=${database.user};Port=${database.port};ServerName=${database.host}
pool = ${restui.maxThreads} + ${xmlui.maxThreads} + ${gws.ws.maxThreads} + ${gws.comm.maxThreads} + ${database.poolBackup}
poolBackup = 4
init =
queries.impl = fs
queries.fs.rootDir = /usr/share/beeeon/db/pgsql/queries
queries.fs.preserveLines = 0
features = autoCommit=false
timeout = -1

[cassandra]
enable = no
connector = host=${cassandra.host};port=${cassandra.port};io-threads=${cassandra.pool};request-timeout=${cassandra.timeout};
pool = ${restui.maxThreads} + ${xmlui.maxThreads} + ${gws.ws.maxThreads} + ${gws.comm.maxThreads} + ${cassandra.poolBackup}
poolBackup = 4
port = 9042
host = 127.0.0.1
rpcPort = 9160
jmxPort = 7199
storagePort = 7000
init =
features =
cluster.name = BeeeOn Cluster
queries.fs.rootDir = ${application.configDir}../db/cql
queries.fs.preserveLines = 1
timeout = -1

[gateway-rpc]
type = async

async.finalResultTimeout = 30 s

[baf]
publish.data.enable = no
publish.device.enable = no
publish.gateways.enable = no
publish.server.enable = no
publish.identity.enable = no
publish.zeromq.enable = no
publish.zeromq.type = PUSH
publish.zeromq.endpoint = ipc:///var/run/beeeon/server/publish.zeromq
publish.zeromq.socket.linger = 2 s

[events]
finalize.timeout = 5 s

[logging]
channels.split.class = SplitterChannel
channels.split.channels = async_console, async_system
;channels.split.channels = syslog

loggers.root.channel = split
loggers.root.level = notice

channels.async_console.class = AsyncChannel
channels.async_console.channel = console

channels.console.class = ConsoleChannel
channels.console.pattern = [%q] %t {%s, #%I, %T}

channels.async_system.class = AsyncChannel
channels.async_system.channel = system

channels.system.class = FileChannel
channels.system.pattern = %s %L%Y-%n-%d %H:%M:%S.%i %P:{%I,%T} [%p] %t (%U:%u)
channels.system.path = /var/log/beeeon/server.log
channels.system.rotation = daily
channels.system.flush = true
channels.system.purgeAge = 2 months
channels.system.archive = timestamp

channels.syslog.class = SyslogChannel
channels.syslog.pattern = %s %L%Y-%n-%d %H:%M:%S.%i %P:{%I,%T} [%p] %t (%U:%u)
channels.syslog.name = beeeon-server
channels.syslog.facility = LOG_DAEMON
channels.syslog.options = LOG_PERROR + LOG_CONS
